buildscript {
    ext {
        commonsCollectionsVersion = '4.3'
        commonsLangVersion = '3.8.1'
        javaeeVersion = '8.0.1'
        thorntailVersion = '2.4.0.Final'
        lombokVersion = '1.18.6'
    }
    repositories {
        jcenter()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    }
    dependencies {
        classpath "io.thorntail:thorntail-gradle-plugin:$thorntailVersion"
    }
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'eclipse'

    repositories {
        jcenter()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
        maven { url 'http://repository.jboss.org/nexus/content/groups/public/' }
    }
    dependencies {
        // BOM
        implementation enforcedPlatform("io.thorntail:bom-all:$thorntailVersion")

         // Lombok
        annotationProcessor "org.projectlombok:lombok:$lombokVersion"
        compileOnly "org.projectlombok:lombok:$lombokVersion"
        testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"
        testCompileOnly "org.projectlombok:lombok:$lombokVersion"

        // Utilities
        implementation 'com.google.code.findbugs:jsr305:3.0.2'
    }
}


// ----- Configuration ------------------------------------

def confFiles = fileTree('conf').include('**/*.yml', '**/*.json')
confFiles.forEach { File src ->
    def dest = new File(
        src.absolutePath.replace("${rootDir.absolutePath}/conf", rootDir.absolutePath))
    if (src.name.endsWith('.yml')) {
        dest.write("# This YAML source file was generated by the Gradle.\n\n")
    } else {
        dest.setBytes([] as byte[])
    }
    dest.append(src.readBytes())
}
